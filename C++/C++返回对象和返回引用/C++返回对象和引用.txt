1、返回对象
string operator+（string& a, string &b）
{
	string c;
	return c;
}

	返回对象一般由于函数中生成新的临时对象，所以不能返回该临时对象的引用。
	在return c的时候，由于返回给了string temp，所以调用该类的复制构造函数生成临时对象temp。
	如果函数的返回值给了初始化string a = func（）那么，用临时对象调用该类的复制构造函数生成a。
	如果函数的返回值给了赋值string a； a= func（）用临时对象temp为参数调用该类的=运算符重载函数。
	如果函数的返回值给了string &a = func（）；，引用a关联到了临时对象temp，在该语句；结束后，temp析构了，该引用a非法。
2、返回对象
string &operator=（string &a)
{
	return c;
}
	引用变量除了声明的时候不生成对象以外，所有使用的时候全部等价于关联的对象本身。
	函数返回该对象的引用，string &temp =a，不生成对象，temp关联到对象a。
	如果函数的返回值给了初始化string c = func（），那么用该对象a（参数：引用等同实体）调用该类的复制构造函数生成c。
	如果函数的返回值给了赋值string c； c= func（），那么用该对象a（参数：引用等同实体）调用该类的=运算符重载函数。
	如果函数的返回值给了引用string &c = func（），那么该引用c关联到temp（使用时等同于实体对象），等同于关联到a.



在默认没有给出的情况下，复制构造函数和=运算符重载都有默认形式，都是相应成员的浅复制，若成员为对象，调用该类的复制构造函数（初始化），或者调用该类的=运算符重载（赋值）。